// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backend.data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250410231958_AlterarSchemaParaTembo")]
    partial class AlterarSchemaParaTembo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("tembo")
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backend.models.CabeloModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Composicao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Forma")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Textura")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cabelos", "tembo");
                });

            modelBuilder.Entity("backend.models.CabeloTratamentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CabeloId")
                        .HasColumnType("integer");

                    b.Property<int>("TratamentoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CabeloId");

                    b.HasIndex("TratamentoId");

                    b.ToTable("CabeloTratamento", "tembo");
                });

            modelBuilder.Entity("backend.models.TratamentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Beneficios")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descritivo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Produtos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tratamentos", "tembo");
                });

            modelBuilder.Entity("backend.models.CabeloTratamentoModel", b =>
                {
                    b.HasOne("backend.models.CabeloModel", "Cabelo")
                        .WithMany("Tratamentos")
                        .HasForeignKey("CabeloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.models.TratamentoModel", "Tratamento")
                        .WithMany("Cabelos")
                        .HasForeignKey("TratamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabelo");

                    b.Navigation("Tratamento");
                });

            modelBuilder.Entity("backend.models.CabeloModel", b =>
                {
                    b.Navigation("Tratamentos");
                });

            modelBuilder.Entity("backend.models.TratamentoModel", b =>
                {
                    b.Navigation("Cabelos");
                });
#pragma warning restore 612, 618
        }
    }
}
